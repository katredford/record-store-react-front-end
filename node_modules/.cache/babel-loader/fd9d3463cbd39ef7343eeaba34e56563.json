{"ast":null,"code":"var _jsxFileName = \"/Users/katier./Desktop/cognizant/fullstack/starter/src/Records.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport RecordCard from './RecordCard.js';\nimport RecordForm from './RecordForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Records() {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [scopedRecord, setScopedRecord] = useState({});\n  const [error, setError] = useState();\n  useEffect(() => {\n    fetch(\"http://localhost:8080/records\").then(response => response.json()).then(result => setRecords(result)).catch(console.log);\n  }, []);\n\n  function notify(_ref) {\n    let {\n      action,\n      record,\n      error\n    } = _ref;\n\n    if (error) {\n      setError(error);\n      setShowForm(false);\n      return;\n    }\n\n    switch (action) {\n      case \"edit\":\n        setRecords(records.map(e => {\n          if (e.id === record.id) {\n            return record;\n          }\n\n          return e;\n        }));\n        break;\n\n      case \"edit-form\":\n        setScopedRecord(record);\n        setShowForm(true);\n        return;\n\n      case \"delete\":\n        setRecords(records.filter(e => e.id !== record.id));\n        break;\n    }\n\n    error = \"\";\n    setShowForm(false);\n  }\n\n  if (showForm) {\n    return /*#__PURE__*/_jsxDEV(RecordForm, {\n      record: scopedRecord,\n      notify: notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), records.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      children: \"No Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-3\",\n      children: records.map(e => /*#__PURE__*/_jsxDEV(RecordCard, {\n        record: e,\n        notify: notify\n      }, e.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Records, \"oAh21u1XfwofpJQWY+sedq/iIF8=\");\n\n_c = Records;\nexport default Records;\n\nvar _c;\n\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"sources":["/Users/katier./Desktop/cognizant/fullstack/starter/src/Records.js"],"names":["useState","useEffect","RecordCard","RecordForm","Records","records","setRecords","showForm","setShowForm","scopedRecord","setScopedRecord","error","setError","fetch","then","response","json","result","catch","console","log","notify","action","record","map","e","id","filter","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport RecordCard from './RecordCard.js';\nimport RecordForm from './RecordForm.js';\n\nfunction Records() {\n\n    const [records, setRecords] = useState([]);\n    const [showForm, setShowForm] = useState(false);\n    const [scopedRecord, setScopedRecord] = useState({});\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/records\")\n            .then(response => response.json())\n            .then(result => setRecords(result))\n            .catch(console.log);\n    }, []);\n\n    function notify({ action, record, error }) {\n\n        if (error) {\n            setError(error);\n            setShowForm(false);\n            return;\n        }\n\n        switch (action) {\n            case \"edit\":\n                setRecords(records.map(e => {\n                    if (e.id === record.id) {\n                        return record;\n                    }\n                    return e;\n                }));\n                break;\n            case \"edit-form\":\n                setScopedRecord(record);\n                setShowForm(true);\n                return;\n            case \"delete\":\n                setRecords(records.filter(e => e.id !== record.id));\n                break;\n        }\n        \n        error = \"\";\n        setShowForm(false);\n    }\n\n    if (showForm) {\n        return <RecordForm record={scopedRecord} notify={notify} />\n    }\n\n    return (\n        <>\n            <div className=\"row mt-2\">\n                <div className=\"col-8\">\n                    <h1>Records</h1>\n                </div>\n            </div>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n            {records.length === 0 ? <div className=\"alert alert-warning\">No Records</div>\n                : (<div className=\"row row-cols-3\">\n                    {records.map(e => <RecordCard key={e.id} record={e} notify={notify} />)}\n                </div>)}\n        </>\n    )\n}\n\nexport default Records;"]},"metadata":{},"sourceType":"module"}