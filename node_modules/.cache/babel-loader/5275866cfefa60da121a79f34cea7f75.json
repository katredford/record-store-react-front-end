{"ast":null,"code":"var _jsxFileName = \"/Users/katier./Desktop/cognizant/fullstack/starter/src/RecordForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RecordForm(_ref) {\n  _s();\n\n  let {\n    record: initialRecord,\n    notify\n  } = _ref;\n  const [record, setRecord] = useState(initialRecord);\n\n  function handleChange(evt) {\n    const clone = { ...record\n    };\n    clone[evt.target.name] = evt.target.value;\n    setRecord(clone);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const url = `http://localhost:8080/records/${record.id}`;\n    const method = \"PUT\";\n    const expectedStatus = 204;\n    const init = {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(record)\n    };\n    fetch(url, init).then(response => {\n      if (response.status === expectedStatus) {\n        return record;\n      }\n\n      return Promise.reject(`Didn't receive expected status: ${expectedStatus}`);\n    }).then(result => notify({\n      action: \"edit\",\n      record: result\n    })).catch(error => notify({\n      error: error\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"artist\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"artist\",\n          name: \"artist\",\n          className: \"form-control\",\n          value: record.artist,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"album\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"album\",\n          name: \"album\",\n          className: \"form-control\",\n          value: record.album,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year\",\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"year\",\n          name: \"year\",\n          className: \"form-control\",\n          value: record.year,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-3\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          type: \"button\",\n          onClick: () => notify({\n            action: \"cancel\"\n          }),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RecordForm, \"rMKicYNdN46aqKA97dGMfXqETvQ=\");\n\n_c = RecordForm;\nexport default RecordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordForm\");","map":{"version":3,"sources":["/Users/katier./Desktop/cognizant/fullstack/starter/src/RecordForm.js"],"names":["useState","RecordForm","record","initialRecord","notify","setRecord","handleChange","evt","clone","target","name","value","handleSubmit","preventDefault","url","id","method","expectedStatus","init","headers","body","JSON","stringify","fetch","then","response","status","Promise","reject","result","action","catch","error","artist","album","year"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,UAAT,OAAuD;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,MAAM,EAAEC,aAAV;AAAyBC,IAAAA;AAAzB,GAAmC;AAEnD,QAAM,CAACF,MAAD,EAASG,SAAT,IAAsBL,QAAQ,CAACG,aAAD,CAApC;;AAEA,WAASG,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,UAAMC,KAAK,GAAG,EAAE,GAAGN;AAAL,KAAd;AACAM,IAAAA,KAAK,CAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,CAAL,GAAyBH,GAAG,CAACE,MAAJ,CAAWE,KAApC;AACAN,IAAAA,SAAS,CAACG,KAAD,CAAT;AACH;;AAED,WAASI,YAAT,CAAsBL,GAAtB,EAA2B;AACvBA,IAAAA,GAAG,CAACM,cAAJ;AAEA,UAAMC,GAAG,GAAI,iCAAgCZ,MAAM,CAACa,EAAG,EAAvD;AACA,UAAMC,MAAM,GAAG,KAAf;AACA,UAAMC,cAAc,GAAG,GAAvB;AAEA,UAAMC,IAAI,GAAG;AACTF,MAAAA,MADS;AAETG,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFA;AAMTC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAepB,MAAf;AANG,KAAb;AASAqB,IAAAA,KAAK,CAACT,GAAD,EAAMI,IAAN,CAAL,CACKM,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoBT,cAAxB,EAAwC;AACpC,eAAOf,MAAP;AACH;;AACD,aAAOyB,OAAO,CAACC,MAAR,CAAgB,mCAAkCX,cAAe,EAAjE,CAAP;AACH,KANL,EAOKO,IAPL,CAOUK,MAAM,IAAIzB,MAAM,CAAC;AACnB0B,MAAAA,MAAM,EAAE,MADW;AAEnB5B,MAAAA,MAAM,EAAE2B;AAFW,KAAD,CAP1B,EAWKE,KAXL,CAWWC,KAAK,IAAI5B,MAAM,CAAC;AAAE4B,MAAAA,KAAK,EAAEA;AAAT,KAAD,CAX1B;AAaH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEpB,YAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,QAAtB;AAA+B,UAAA,IAAI,EAAC,QAApC;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEV,MAAM,CAAC+B,MAFlB;AAE0B,UAAA,QAAQ,EAAE3B;AAFpC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,OAAtB;AAA8B,UAAA,IAAI,EAAC,OAAnC;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEJ,MAAM,CAACgC,KAFlB;AAEyB,UAAA,QAAQ,EAAE5B;AAFnC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEJ,MAAM,CAACiC,IAFlB;AAEwB,UAAA,QAAQ,EAAE7B;AAFlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAmBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,IAAI,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,IAAI,EAAC,QAA3C;AAAoD,UAAA,OAAO,EAAE,MAAMF,MAAM,CAAC;AAAE0B,YAAAA,MAAM,EAAE;AAAV,WAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA6BH;;GAtEQ7B,U;;KAAAA,U;AAwET,eAAeA,UAAf","sourcesContent":["import { useState } from 'react';\n\nfunction RecordForm({ record: initialRecord, notify }) {\n\n    const [record, setRecord] = useState(initialRecord);\n\n    function handleChange(evt) {\n        const clone = { ...record };\n        clone[evt.target.name] = evt.target.value;\n        setRecord(clone);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        const url = `http://localhost:8080/records/${record.id}`;\n        const method = \"PUT\";\n        const expectedStatus = 204;\n\n        const init = {\n            method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(record)\n        };\n\n        fetch(url, init)\n            .then(response => {\n                if (response.status === expectedStatus) {\n                    return record;\n                }\n                return Promise.reject(`Didn't receive expected status: ${expectedStatus}`);\n            })\n            .then(result => notify({\n                action: \"edit\",\n                record: result\n            }))\n            .catch(error => notify({ error: error }));\n\n    }\n\n    return (\n        <>\n            <h1>Edit Record</h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"artist\">Artist</label>\n                    <input type=\"text\" id=\"artist\" name=\"artist\"\n                        className=\"form-control\"\n                        value={record.artist} onChange={handleChange} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"album\">Album</label>\n                    <input type=\"text\" id=\"album\" name=\"album\"\n                        className=\"form-control\"\n                        value={record.album} onChange={handleChange} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"year\">Year</label>\n                    <input type=\"text\" id=\"year\" name=\"year\"\n                        className=\"form-control\"\n                        value={record.year} onChange={handleChange} />\n                </div>\n                <div className=\"mb-3\">\n                    <button className=\"btn btn-primary mr-3\" type=\"submit\">Save</button>\n                    <button className=\"btn btn-secondary\" type=\"button\" onClick={() => notify({ action: \"cancel\" })}>Cancel</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default RecordForm;"]},"metadata":{},"sourceType":"module"}